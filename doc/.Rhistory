for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
emotions=get_nrc_sentiment(sentences)
word.count=word_count(sentences)
# colnames(emotions)=paste0("emo.", colnames(emotions))
# in case the word counts are zeros?
emotions=diag(1/(word.count+0.01))%*%as.matrix(emotions)
sentence.list=rbind(sentence.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)
)
)
}
}
sentence.list=
sentence.list%>%
filter(!is.na(word.count))
sel.comparison=c( "JamesKPolk","AbrahamLincoln","FranklinDRoosevelt", "HarrySTruman", "GeorgeWBush")
sentence.list.sel=filter(sentence.list,
type=="inaug", Term==1, File%in%sel.comparison)
sentence.list.sel$File=factor(sentence.list.sel$File)
sentence.list.sel$FileOrdered=reorder(sentence.list.sel$File,
sentence.list.sel$word.count,
mean,
order=T)
par(mar=c(4, 11, 2, 2))
beeswarm(word.count~FileOrdered,
data=sentence.list.sel,
horizontal = TRUE,
pch=16, col=alpha(brewer.pal(9, "Set1"), 0.6),
cex=0.55, cex.axis=0.8, cex.lab=0.8,
spacing=5/nlevels(sentence.list.sel$FileOrdered),
las=2, ylab="", xlab="Number of words in a sentence.",
main="Inaugural Speeches")
sentence.list.sel=filter(sentence.list,
type=="inaug", Term==1, File%in%sel.comparison)
sentence.list.sel$File=factor(sentence.list.sel$File)
sentence.list.sel$FileOrdered=reorder(sentence.list.sel$File,
sentence.list.sel$word.count,
mean,
order=T)
par(mar=c(4, 11, 2, 2))
beeswarm(word.count~FileOrdered,
data=sentence.list.sel,
horizontal = TRUE,
pch=16, col=alpha(brewer.pal(9, "Set1"), 0.6),
cex=0.55, cex.axis=0.8, cex.lab=0.8,
spacing=5/nlevels(sentence.list.sel$FileOrdered),
las=2, ylab="", xlab="Number of words in a sentence.",
main="Inaugural Speeches")
library(expm)
install.packages("expm")
library(expm)
p <- matrix(c(0.3,0.5,0.2,.4,0,.4,.3,.5,.4),ncol=3,byrow = F)
p%^%4
install.packages("ggproto")
library(ggmap)
ggmap(get_map("New York, New York",zoom=11,color = "bw")) +
geom_point(data=mh2009.selgeo, aes(x=lon,y=lat),  color='red')
mh2009.use=
mh2009%>%
mutate(sale.month=month(as.Date(SALE.DATE, "%m/%d/%y")))%>%
mutate(sale.price=ifelse(SALE.PRICE==0, NA, SALE.PRICE))%>%
mutate(footage=ifelse(GROSS.SQUARE.FEET==0, NA, GROSS.SQUARE.FEET))%>%
mutate(unit.price=sale.price/footage)%>%
mutate(bldg.type=substr(BUILDING.CLASS.CATEGORY, 1, 2))%>%
filter(bldg.type %in% c("10", "13", "25", "28"))%>%
arrange(bldg.type)
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
install.packages("shiny")
library(shiny)
runExample("01_hello")
mh2009=
mh2009%>%
filter(ZIP.CODE>0)%>%
mutate(region=as.character(ZIP.CODE))
mh2009=read.csv(file="../data/ManhattanHousing.csv")
datatable(sample_n(mh2009, 50))
mh2009=
mh2009%>%
filter(ZIP.CODE>0)%>%
mutate(region=as.character(ZIP.CODE))
count.df=mh2009%>%
group_by(region)%>%
summarise(
value=n()
)
save(count.df, file="../output/count.RData")
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
library(choroplethrZip)
zip_choropleth(count.df,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
library(choroplethrZip)
zip_choropleth(count.df,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
library(ggmap)
library(dplyr)
mh2009.selgeo=
mh2009%>%
sample_n(10)%>%
select(starts_with("ADD"))%>%
mutate(ADDRESS_Ext=paste(ADDRESS, "New York, NY", sep=","))%>%
mutate_geocode(ADDRESS_Ext)
library(ggmap)
ggmap(get_map("New York, New York",zoom=11,color = "bw")) +
geom_point(data=mh2009.selgeo, aes(x=lon,y=lat),  color='red')
library(ggmap)
ggmap(get_map("New York, New York",zoom=11,color = "bw")) +
geom_point(data=mh2009.selgeo, aes(x=lon,y=lat),  color='red')
mh2009.use=
mh2009%>%
mutate(sale.month=month(as.Date(SALE.DATE, "%m/%d/%y")))%>%
mutate(sale.price=ifelse(SALE.PRICE==0, NA, SALE.PRICE))%>%
mutate(footage=ifelse(GROSS.SQUARE.FEET==0, NA, GROSS.SQUARE.FEET))%>%
mutate(unit.price=sale.price/footage)%>%
mutate(bldg.type=substr(BUILDING.CLASS.CATEGORY, 1, 2))%>%
filter(bldg.type %in% c("10", "13", "25", "28"))%>%
arrange(bldg.type)
save(mh2009.use, file="../output/mh2009use.RData")
man.nbhd=c("Central Harlem", "Chelsea and Clinton",
"East Harlem", "Gramercy Park and Murray Hill",
"Greenwich Village and Soho", "Lower Manhattan",
"Lower East Side", "Upper East Side", "Upper West Side",
"Inwood and Washington Heights")
zip.nbhd=list(1:length(man.nbhd))
zip.nbhd[[1]]=c(10026, 10027, 10030, 10037, 10039)
zip.nbhd[[2]]=c(10001, 10011, 10018, 10019, 10020)
zip.nbhd[[3]]=c(10036, 10029, 10035)
zip.nbhd[[4]]=c(10010, 10016, 10017, 10022)
zip.nbhd[[5]]=c(10012, 10013, 10014)
zip.nbhd[[6]]=c(10004, 10005, 10006, 10007, 10038, 10280)
zip.nbhd[[7]]=c(10002, 10003, 10009)
zip.nbhd[[8]]=c(10021, 10028, 10044, 10065, 10075, 10128)
zip.nbhd[[9]]=c(10023, 10024, 10025)
zip.nbhd[[10]]=c(10031, 10032, 10033, 10034, 10040)
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
install.packages("shiny")
library(shiny)
install.packages("shiny")
#install.packages("shiny")
library(shiny)
rstrt=read.csv(file="../data/rstrt2016.csv")
datatable(sample_n(rstrt, 50))
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
#install.packages("shiny")
library(shiny)
rstrt=read.csv(file="../data/rstrt2016.csv")
datatable(sample_n(rstrt, 50))
head(rstrt)
rstrt=read.csv(file="../data/rstrt2016.csv")
#datatable(sample_n(rstrt, 50))
head(rstrt)
rstrt=
rstrt%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
rstrtzip=
rstrt%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
rstrt=read.csv(file="../data/rstrt2016.csv")
#datatable(sample_n(rstrt, 50))
head(rstrt)
rstrtzip=
rstrt%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.df=mh2009%>%
group_by(region)%>%
summarise(
value=n()
)
save(count.df, file="../output/count.RData")
View(count.df)
View(count.df)
count.df=rstrtzip%>%
group_by(region)%>%
summarise(
value=n()
)
save(count.df, file="../output/count.RData")
View(count.df)
View(count.df)
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
library(choroplethrZip)
zip_choropleth(count.df,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
library(choroplethrZip)
zip_choropleth(count.df,
title       = "restaurants in NYC",
legend      = "Number of restaurants",
county_zoom = 36061)
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
county_zoom = nyc_fips,
title       = "2012 New York City ZCTA Population Estimates",
legend      = "Population")
?zip.regions
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
#nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
title       = "2012 New York City ZCTA Population Estimates",
legend      = "Population")
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
#nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
county_zoom = nyc_fips,
title       = "2012 New York City ZCTA Population Estimates",
legend      = "Population")
data(zip.regions)
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
county_zoom = nyc_fips,
title       = "2012 New York City ZCTA Population Estimates",
legend      = "Population")
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
data("zip.regions")
head(zip.regions)
zip.regions[zip.regions$region=10048,]
zip.regions[zip.regions$region==10048,]
zip.regions[zip.regions$region==10025,]
zip.regions[zip.regions$region==10027,]
?zip.map
head(zip_map())
head(zip_map
)
data(zip.map)
head(zip.map)
zip.map[zip.map$region==10025,]
zip.map[zip.map$region==10048,]
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
summarise(
value=n()
)
library(choroplethrZip)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
summarise(
value=n()
)
library(choroplethrZip)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
summarise(
value=n()
)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
detach("package:plyr", unload=TRUE)
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
summarise(
value=n()
)
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
dplyr::summarise(
value=n()
)
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
rstrtvis("Italian")
rstrtvis("Chinese")
rstrtvis("Italian")
?zip_choropleth
#install.packages("shiny")
library(shiny)
rstrt=read.csv(file="../data/rstrt2016.csv")
#datatable(sample_n(rstrt, 50))
head(rstrt)
rstrtzip=
rstrt%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.df=rstrtzip%>%
group_by(region)%>%
summarise(
value=n()
)
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if(!require("lubridate")) install.packages('lubridate')
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
#install.packages("shiny")
library(shiny)
rstrt=read.csv(file="../data/rstrt2016.csv")
#datatable(sample_n(rstrt, 50))
head(rstrt)
rstrtzip=
rstrt%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.df=rstrtzip%>%
group_by(region)%>%
summarise(
value=n()
)
count.df=rstrtzip%>%
group_by(region)%>%
dplyr::summarise(
value=n()
)
save(count.df, file="../output/count.RData")
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
library(choroplethrZip)
# zip_choropleth(count.df,
#     title       = "restaurants in NYC",
#     legend      = "Number of restaurants",
#     county_zoom = 36061)
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.df,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
head(count.df)
count[count.df$value==0,]
View(count.df)
View(count.df)
count.df[count.df==8,]
typeof(count.df)
count.df[count.df$value==8,]
rstrtvis <- function(type)
{
rstrtvis <- rstrt[rstrt$CUISINE.DESCRIPTION==type,]
rstrtzipvis=
rstrtvis%>%
filter(ZIPCODE>0)%>%
mutate(region=as.character(ZIPCODE))
count.dfvis=rstrtzipvis%>%
group_by(region)%>%
dplyr::summarise(
value=n()
)
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
nyc_fips = c(36005, 36047, 36061, 36081, 36085)
zip_choropleth(count.dfvis,
county_zoom = nyc_fips,
title       = "NYC restaurants",
legend      = "number of restaurants")
}
rstrtvis("Chinese")
?renderPlot
runApp(getwd("/Users/yingxinzhang/Desktop/GR5243 Applied Data Science/PJ2"))
runApp('~/Desktop/GR5243 Applied Data Science/PJ2')
runApp('~/Desktop/GR5243 Applied Data Science/PJ2')
runApp('~/Desktop/GR5243 Applied Data Science/PJ2')
runApp('~/Desktop/GR5243 Applied Data Science/PJ2')
runApp('~/Desktop/GR5243 Applied Data Science/PJ2')
